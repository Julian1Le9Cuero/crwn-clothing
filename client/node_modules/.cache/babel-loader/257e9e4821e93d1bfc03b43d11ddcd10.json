{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Julian\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\n// cartItems= Current Items in the cartItems array\n// cartItemToAdd= Cart Item that we want to add\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  // Returns true when it finds the first item based on the function inside the callback\n  //   If it does not find anyhing it will throw undefined\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    // Return new array because we have to proivde new versions of the state in order for the components to re render properly\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem //Return existing item cause there's no need to update\n    );\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\n  if (itemToRemove.quantity > 1) {\n    return cartItems.map(cartItem => {\n      return cartItem.id === itemToRemove.id ? _objectSpread({}, itemToRemove, {\n        quantity: itemToRemove.quantity - 1\n      }) : cartItem;\n    });\n  }\n\n  return cartItems.filter(cartItem => cartItem.id !== itemToRemove.id);\n};","map":{"version":3,"sources":["C:/Users/Julian/crwn-clothing/client/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","itemToRemove","filter"],"mappings":";AAAA;AACA;AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD;AACA;AACA,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACvBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADnB,CAAzB;;AAGA,MAAIH,gBAAJ,EAAsB;AACpB;AACA,WAAOF,SAAS,CAACM,GAAV,CACLF,QAAQ,IACNA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,qBACSD,QADT;AACmBG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AADjD,SAEIH,QAJD,CAIU;AAJV,KAAP;AAMD;;AAED,SAAO,CAAC,GAAGJ,SAAJ,oBAAoBC,aAApB;AAAmCM,IAAAA,QAAQ,EAAE;AAA7C,KAAP;AACD,CAjBM;AAmBP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,YAAZ,KAA6B;AAC7D,MAAIA,YAAY,CAACF,QAAb,GAAwB,CAA5B,EAA+B;AAC7B,WAAOP,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAAI;AAC/B,aAAOA,QAAQ,CAACC,EAAT,KAAgBI,YAAY,CAACJ,EAA7B,qBACEI,YADF;AACgBF,QAAAA,QAAQ,EAAEE,YAAY,CAACF,QAAb,GAAwB;AADlD,WAEHH,QAFJ;AAGD,KAJM,CAAP;AAKD;;AACD,SAAOJ,SAAS,CAACU,MAAV,CAAiBN,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,YAAY,CAACJ,EAA1D,CAAP;AACD,CATM","sourcesContent":["// cartItems= Current Items in the cartItems array\r\n// cartItemToAdd= Cart Item that we want to add\r\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\r\n  // Returns true when it finds the first item based on the function inside the callback\r\n  //   If it does not find anyhing it will throw undefined\r\n  const existingCartItem = cartItems.find(\r\n    cartItem => cartItem.id === cartItemToAdd.id\r\n  );\r\n  if (existingCartItem) {\r\n    // Return new array because we have to proivde new versions of the state in order for the components to re render properly\r\n    return cartItems.map(\r\n      cartItem =>\r\n        cartItem.id === cartItemToAdd.id\r\n          ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n          : cartItem //Return existing item cause there's no need to update\r\n    );\r\n  }\r\n\r\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\r\n};\r\n\r\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\r\n  if (itemToRemove.quantity > 1) {\r\n    return cartItems.map(cartItem => {\r\n      return cartItem.id === itemToRemove.id\r\n        ? { ...itemToRemove, quantity: itemToRemove.quantity - 1 }\r\n        : cartItem;\r\n    });\r\n  }\r\n  return cartItems.filter(cartItem => cartItem.id !== itemToRemove.id);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}